##################################
# Variables to config GIT config #
##################################

# git_deploy_branch
#  Defines branch to be used when deploying.
#  It must be a valid branch name. Ex. develop.
#  If not defined, it'll deploy using current branch.
#  Can be set on CLI using --branch <git-deploy-branch> flag
#git_deploy_branch=develop

# git_pull_mode
#  Defines the way git must pull changes from origin.
#  Value must be:
#    "none" - Indicates to no pull changes from origin.
#    "soft" - Indicates to pull changes using git pull.
#    "hard" - Indicates to pull changes using git reset.
#  Default value is "hard".
#  Can be set on CLI using --pull-mode <git-pull-mode> flag
git_pull_mode="hard"

# git_use_stash
#  Defines if stash must be used when pulling changes
#  Value must be 0 or 1. Default is 0.
#  Can be set to 1 on CLI using --use-stash flag
git_use_stash=0

######################################
# Variables to config Magento config #
######################################

# m2_build_files
#  Defines if Magento must build files and deploy static-content
#  It's related with following commands:
#   bin/magento setup:di:compile
#   bin/magento setup:static-content:deploy
#  Value must be 0 or 1. Default is 1.
#  Can be set to 0 on CLI using --no-build flag
m2_build_files=1

# m2_build_languages
#  Defines languages to use when deploying static content
#  Value must be a valid group of languages. Ex. "es_ES en_US"
#  Default value is empty ("") so Magento will deploy content based on themes config
#  Can be set on CLI using --languages <m2-build-languages> flag
m2_build_languages=""

# m2_clean_folders
#  Defines if Magento must clean content in:
#   var/view_preprocessed
#   pub/static
#   generated
#  Value must be 0 or 1. Default is 1.
#  Can be set to 0 on CLI using --no-clean-folders flag
m2_clean_folders=1

# m2_disable_maintenance
#  Defines if Magento must execute bin/magento maintenance:disable after deploying.
#  Value must be 0 or 1. Default is 1.
#  Can be set to 0 on CLI using --no-disable-maintenance flag
m2_disable_maintenance=1

# m2_enable_maintenance
#  Defines if Magento must execute bin/magento maintenance:enable before deploying.
#  Value must be 0 or 1. Default is 1.
#  Can be set to 0 on CLI using --no-enable-maintenance flag
m2_enable_maintenance=1

# m2_flush_cache
#  Defines if Magento must flush cache when deploying.
#  Value must be 0 or 1. Default is 1.
#  Can be set to 0 on CLI using --no-cache-flush flag
m2_flush_cache=1

# m2_install_deps
#  Defines if Magento must intall dependencies with composer
#  Value must be 0 or 1. Default is 1
#  Can be set to 0 on CLI using --no-deps flag
m2_install_deps=1

# m2_reindex
#  Defines if magento must reindex data
#  It's related with
#   bin/magento indexer:reset
#   bin/magento indexer:reindex
#  Value must be 0 or 1. Default is 1.
#  Can be set to 0 on CLI using --no-reindex flag
m2_reindex=1

# m2_upgrade
#  Defines if Magento must upgrade config
#  It's related with
#   bin/magento app:config:import
#   bin/magento setup:upgrade
#  Value must be 0 or 1. Default is 1.
#  Can be set to 0 on CLI using --no-upgrade flag
m2_upgrade=1

# m2_use_cron
#  Defines if Magento must use cronjob.
#  It's related with magento commands:
#   bin/magento cron:install -f
#   bin/magento cron:remove
#  Value must be 0 or 1. Default is 1.
#  Can be set to 0 on CLI using --no-cron flag
m2_use_cron=1


# git_protocol - Connection protocol must be http, https or ssh
git_protocol=ssh
# git_user - User to access when protocol is http/https
git_user=
# git_key - Access key to use when protocol is http/https
git_key=
# git_route - Full route to get repo
git_route=
# git_branch - Branch to deploy
git_branch=main
# repo_user - Repository author name for commits
repo_user=
# repo_email - Repository author email for commits
repo_email=
# db_host - Database host
db_host=
# db_name - Database name
db_name=
# db_user - Database user
db_user=
# db_pwd - Database password
db_pwd=
# search_engine - Allowed search engines are "elasticsearch7" or "opensearch"
search_engine=
# search_host - Search engine host (e.x. http://search-engine)
search_host=
# search_port - Search engine connection port
search_port=
# search_auth - Search need authentication? Allowed values are 1 or 0
search_auth=
# search_user - User when search engine needs authentication
search_user=
# search_pwd - Password when search engine needs authentication
search_pwd=
# base_url - Base url to serve application (e.x. http://localhost/)
base_url=
# admin_path - Path to route back office
admin_path=
# magento_version - specify Magento version to use when installing a fresh new application. Default is '2.4.7'
magento_version=
# php_version - specify PHP version to use when generating Nginx host file. Default is '8.3'
php_version=
# excluded_on_install - Space separated module names than must be disabled before install. (ex. "Magento_Sales Magento_Cms")
excluded_on_install=
